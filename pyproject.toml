[tool.ruff]
line-length = 100
extend-include = ["*.ipynb"]

[tool.ruff.lint]
extend-select = [
    "F",   # pyflakes
    "E",   # pycodestyle
    "W",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade
    "ARG", # Unused arguments
    "RUF", # Ruff options
]

[tool.pdm.version]
source = "file"
path = "src/myst_nb_bokeh/__init__.py"

[tool.pdm.scripts]
ruff_check = { cmd = "ruff check src/ docs/ tests/" }
ruff_format_check = { cmd = "ruff format --check src/ docs/ tests/" }
mypy_check = { cmd = "mypy src/" }
lint = { composite = ["ruff_check", "ruff_format_check", "mypy_check"] }
ruff_fix = { cmd = "ruff check --fix-only src/ docs/ tests/" }
ruff_format = { cmd = "ruff format src/ docs/ tests/" }
format = { composite = ["ruff_fix", "ruff_format"] }
test = { cmd = "pytest --cov=myst_nb_bokeh --cov-report=xml --cov-report=term-missing" }
docs = { cmd = "sphinx-build -b html docs/ docs/_build" }

[tool.pdm.dev-dependencies]
dev = ["pre-commit>=3.8.0", "ruff>=0.6.2", "mypy>=1.11.1"]
test = [
    "lxml>=5.3.0",
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "pytest-regressions>=2.5.0",
]
type-hints = ["types-docutils>=0.21.0.20240724"]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.mypy]
show_error_codes = true
check_untyped_defs = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_unreachable = true
files = "src"

[[tool.mypy.overrides]]
module = [
    "IPython.display",
    "myst_nb.core.render",
    "myst_nb.ext.glue",
    "nbformat",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
markers = ["sphinx_params"]
filterwarnings = [
    "ignore:'environmentfilter' is renamed",
    "ignore:'contextfilter' is renamed",
    "ignore:'contextfunction' is renamed",
]

[project]
name = "myst-nb-bokeh"
description = "MyST-NB-Bokeh includes functions for gluing and pasting Bokeh figures in MyST documents."
keywords = ["docutils", "sphinx", "bokeh"]
readme = "README.md"
authors = [{ name = "Bryan Weber", email = "bryan.w.weber@gmail.com" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Sphinx :: Extension",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
]
requires-python = ">=3.10"
dependencies = [
    "IPython>=8.20.0",
    "bokeh>=3.3.4",
    "myst-nb>=1.0.0",
    "sphinx>=7.2.6",
]
license = { text = "BSD-3-Clause" }
dynamic = ["version"]

[project.optional-dependencies]
docs = ["sphinx-book-theme>=1.1.0"]

[project.urls]
Homepage = "https://github.com/bryanwweber/myst-nb-bokeh"
Documentation = "https://myst-nb-bokeh.readthedocs.io/en/latest/"
Source = "https://github.com/bryanwweber/myst-nb-bokeh"
Tracker = "https://github.com/bryanwweber/myst-nb-bokeh/issues"

[project.entry-points."myst_nb.mime_renderers"]
bokeh = "myst_nb_bokeh:BokehOutputRenderer"
